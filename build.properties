# These properties can be set to alter the build process.
#
# This file contains default values that are used by official I2P installers.
#
# End-users *should not* edit this file. If you want to change the values, make a
# copy, call it override.properties, and make the desired changes to that.

################################################################################

# Javadocs
# Note: Include the trailing slash! Don't surround the URL in quotes!
javasedocs.url=https://docs.oracle.com/javase/8/docs/api/
javaeedocs.url=https://docs.oracle.com/javaee/7/api/
# The following link is for 9.4.x
#jettydocs.url=http://download.eclipse.org/jetty/stable-9/apidocs/
# last one available on archive.eclipse.org
jettydocs.url=https://archive.eclipse.org/jetty/9.3.9.v20160517/apidocs/
wrapperdocs.url=https://wrapper.tanukisoftware.com/jdoc/
# these are only for unit test javadocs
i2pdocs.url=http://docs.i2p-projekt.de/javadoc/
junitdocs.url=https://junit.org/junit5/docs/current/api/
# This will go in the jar manifests
build.built-by=unknown

# filename of the sloccount report
sloccount.report.file=sloccount.sc

# Uncomment the next line to prevent "ant debian" from automatically
# updating the changelog
#noAutoDebchange=true

# Building EXEs in x64 Linux requires that 32bit libraries are installed. In Debian,
# for example, installing the libc6-i386 package will satisfy this requirement.
# Uncomment the next line to prevent building EXEs (changing it to false will have no impact)
#noExe=true

# IzPack 5.1.x install dir
# Default is $HOME/IzPack
#izpack5.home=/PATH/TO/IzPack
# Default is 5.1.3
#izpack5.version=5.1.3

# Change this to false if you don't have gettext or you want to prevent it from running during the build
require.gettext=true

# Compile for this version of Java
#javac.version=17
#javac.release=17

# Additional classpath if required
#javac.classpath=/PATH/TO/pack200.jar

# Optional compiler args
# This one keeps gcj a lot quieter
#javac.compilerargs=-warn:-unchecked,raw,unused,serial

#
# Note to packagers, embedders, distributors:
#
# Strictly speaking, you must either use the compiler for the minimum Java version you are
# targeting (default 1.8, see above), or specify a bootclasspath, which means you need
# the JRE for the target version installed as well.
#
# You cannot compile with 1.8 and target 1.6 or 1.7 without bootclasspath,
# or your users will get runtime errors.
# Below is an example of a bootclasspath that works on Ubuntu.
#
# For more info:
#    http://zzz.i2p/topics/1668
#    https://gist.github.com/AlainODea/1375759b8720a3f9f094
#
# Do NOT set bootclasspath when compiling with Java 9 or higher.
#
# For embedded use only, and for a limited time,
# the following subsystems ONLY may be built with Java 6 by setting javac.version=1.6 in override.properties,
# and setting javac.compilerargs to use java 6 jars:
# core, router, ministreaming, streaming, addressbook, i2ptunnel, BOB
# Use the buildX ant targets to build these (see build.xml).
# We may start using Java 7 features in these subsystems at any time and without notice.
#javac.compilerargs=-bootclasspath /usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar
#
# For standard builds, set the following in override.properties:
#
#javac.compilerargs=-bootclasspath /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar


### UnitTests ##
# Uncomment the next line to enable integration tests.
# These require a running router with I2CP available on 127.0.0.1:7654.
#runIntegrationTests=true

# Location of the libraries required for the ScalaTest tests.
# Define this in override.properties or pass in on the command line.
# The directory must contain the following library names:
# scala-compiler.jar
# scala-library.jar
# scala-reflect.jar
# scala-xml.jar
# scalactic.jar
# scalatest.jar
# Tested using Scala 2.12.1, scala-xml 1.0.6, and ScalaTest 3.0.1
#scalatest.libs=/PATH/TO/SCALATEST/lib

# Location of the junit libraries
# Defaults to the ant library path if not set.
# If set, this must point to a directory that contains the file junit4.jar
# Debian/Ubuntu: sudo apt-get install junit4
#junit.home=/usr/share/java

# Location of the hamcrest libraries
# Defaults to the ant library path if not set
# If set, this must point to a directory containing the files
#       hamcrest-core.jar, hamcrest-library.jar, and hamcrest-integration.jar
# Tested using Hamcrest 1.3
# Debian/Ubuntu: sudo apt-get install libhamcrest-java
#hamcrest.home=/usr/share/java

# Location of the mockito libraries
# Defaults to the ant library path if not set
# If set, this must point to a directory containing the files
#       mockito-core.jar, byte-buddy.jar, objenesis.jar
# Tested using Mockito 2.23.0 which requires byte-buddy 1.8.2 and objenesis 3.1
#mockito.home=/usr/share/java

# Optional properties used in tests to enable additional tools.
#with.cobertura=/PATH/TO/cobertura.jar
#with.clover=/PATH/TO/clover.jar


### Benchmarks ##
# Location of the JMH libraries
# Defaults to the ant library path if not set
# If set, this must point to a directory containing the files
#       jmh-core.jar, jmh-generator-annprocess.jar, jopt-simple.jar, commons-math3.jar
# Tested using JMH 1.19 which requires jopt-simple 4.6 and commons-math3 3.2
#jmh.home=


### Bundle router infos ###
# Set to bundle router infos from your local I2P install in the package
#bundle.routerInfos=true
#bundle.routerInfos.count=200
#bundle.routerInfos.i2pConfigDir=/PATH/TO/.i2p

### Debian/Ubuntu packages ###
# uncomment to try to make the build reproducible; work in progress
#build.reproducible=true
# Don't include geoip files, we will use geoip-database package
#with-geoip-database=true
# Don't include jetty files, we will use libjetty9-java package. Requires with-libtomcat9-java=true.
#with-libjetty12-java=true
# Don't include tomcat files, we will use libtomcat8-java package
#with-libtomcat9-java=true
# Don't include jstl.jar and standard.jar, we will use libtaglibs-standard-* packages
#with-libtaglibs-standard=true
# Don't include jstl.jar and standard.jar, we will use glassfish-javaee package
#with-glassfish-javaee=true
# Don't include standard.jar, we will use libjakarta-taglibs-standard-java package
#with-libjakarta-taglibs-standard-java=true
# Don't include jstl.jar, we will use libjstl1.1-java package
#with-libjstl1.1-java=true
# Don't compile GettextResource.java, we will use libintl.jar from the gettext-base package
#with-gettext-base=true
# Don't compile gnu.getopt classes, we will use libgetopt-java package
#with-libgetopt-java=true
# Don't bundle flags, we will use famfamfam-flag-png package
#with-famfamfam-flag-png=true
# Don't include json-simple library, we will use libjson-simple-java package
#with-libjson-simple-java=true

### Redhat packages ###
# uncomment to prevent classpaths in jar manifests
# https://fedoraproject.org/wiki/Packaging:Java
# without-manifest-classpath=true
