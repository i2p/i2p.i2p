<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure_10_0.dtd">

<!-- This configuration supports Jetty 12. Do not remove this line. -->

<!-- ========================================================================= -->
<!-- This file configures the Jetty server.                                    -->
<!-- All changes require a restart of I2P.                                     -->
<!--                                                                           -->
<!-- Commonly changed settings:                                                -->
<!--   * host: Change 127.0.0.1 to 0.0.0.0 in the addListener section          -->
<!--           to access the server directly (bypassing i2p)                   -->
<!--           from other computers.                                           -->
<!--   * port: Default 7658 in the addConnector section                         -->
<!--   * docroot: Change the ResourceBase in the contexts/base-context.xml file -->
<!--           to serve files from a different location.                       -->
<!--   * threads: Raise maxThreads in the ThreadPool section                   -->
<!--           if you have a high-traffic site and get a lot of warnings.      -->
<!--   * Uncomment the addWebApplications section to use to enable             -->
<!--           war files placed in the webapps/ dir.                           -->
<!--   * Uncomment the line to allow Jetty to follow symlinks                  -->
<!--                                                                           -->
<!-- I2P uses Jetty 9. If you need web server features not found               -->
<!-- in Jetty 9, you may install and run Jetty 7 or 8 in a different JVM       -->
<!-- or run any other web server such as Apache. If you do run another web     -->
<!-- server instead, be sure and disable the Jetty 9 server for your           -->
<!-- eepsite on http://127.0.0.1:7657/configclients.jsp .                      -->
<!--                                                                           -->
<!-- Jetty now uses the I2P logging system rather than wrapper.log.            -->
<!-- Use the log override org.eclipse.jetty.server.Server to adjust the log level.  -->
<!--                                                                           -->
<!-- Note that the XML encoding for this file is UTF-8.                        -->
<!--                                                                           -->
<!-- If you have a 'split' directory installation, with configuration          -->
<!-- files in ~/.i2p (Linux), %LOCALAPPDATA%\I2P (Windows),                         -->
<!-- or /Users/(user)/Library/Application Support/i2p (Mac), be sure to        -->
<!-- edit the file in the configuration directory, NOT the install directory.  -->
<!-- When running as a Linux daemon, the configuration directory is            -->
<!-- /var/lib/i2p and the install directory is /usr/share/i2p .                -->
<!-- When running as a Windows service,                                        -->
<!-- the configuration directory is \ProgramData\i2p                           -->
<!-- and the install directory is \Program Files\i2p .                         -->
<!--                                                                           -->
<!-- ========================================================================= -->

<!-- ========================================================================= -->
<!-- Configure the Jetty Server                                                -->
<!--                                                                           -->
<!-- Documentation of this file format can be found at:                        -->
<!-- http://www.eclipse.org/jetty/documentation/current/jetty-xml-config.html  -->
<!--                                                                           -->
<!-- ========================================================================= -->


<Configure id="Server" class="org.eclipse.jetty.server.Server">

    <!-- =========================================================== -->
    <!-- Server Thread Pool                                          -->
    <!-- =========================================================== -->
    <Arg>

      <!-- PICK ONE -->

      <!--
           Recommended.
           Two threads are used for the Connector and Acceptor.
           Concurrent requests above maxThreads + queue size - 2 will be rejected and logged.
           Due to the way QTP works, queue size should be larger than maxThreads.
           Increase all values for high-traffic eepsites.

           ref:
           https://wiki.eclipse.org/Jetty/Howto/High_Load
           http://trac.i2p2.i2p/ticket/1395
       -->
      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
        <Arg type="int">20</Arg>     <!-- maxThreads, overridden below -->
        <Arg type="int">3</Arg>      <!-- minThreads, overridden below -->
        <Arg type="int">60000</Arg>  <!-- maxIdleTimeMs, overridden below -->
        <Arg>
           <New class="java.util.concurrent.LinkedBlockingQueue">
              <Arg type="int">40</Arg>
           </New>
        </Arg>
        <Set name="minThreads">3</Set>
        <Set name="maxThreads">20</Set>
        <Set name="idleTimeout">60000</Set>
        <Set name="daemon">true</Set>
        <Set name="name">Eepsite Jetty</Set>
      </New>
    </Arg>



    <!-- =========================================================== -->
    <!-- Set connectors                                              -->
    <!-- =========================================================== -->
    <!-- One of each type!                                           -->
    <!-- =========================================================== -->

    <!-- Use this connector for many frequently idle connections
         and for threadless continuations.
         Not recommended on Java 5 - comment this out, and uncomment the
         SocketConnector below.
         Do not use for gij or JamVM - comment this out, and uncomment the
         SocketConnector below.
    -->
    <Call name="addConnector">
      <Arg>
          <New class="org.eclipse.jetty.server.ServerConnector">
            <Arg><Ref refid="Server" /></Arg>
            <Arg type="int">1</Arg>     <!-- number of acceptors -->
            <Arg type="int">0</Arg>     <!-- default number of selectors -->
            <Arg>
              <Array type="org.eclipse.jetty.server.ConnectionFactory">    <!-- varargs so we need an array -->
                <Item>
                  <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                    <Arg>
                      <New class="org.eclipse.jetty.server.HttpConfiguration">
                        <Set name="sendServerVersion">false</Set>
                        <Set name="sendDateHeader">false</Set>
                        <Set name="sendXPoweredBy">false</Set>
                      </New>
                    </Arg>
                  </New>
                </Item>
              </Array>
            </Arg>
            <Set name="host">127.0.0.1</Set>
            <Set name="port">7658</Set>
            <Set name="idleTimeout">600000</Set>
          </New>
      </Arg>
    </Call>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- To add a HTTPS SSL listener                                     -->
    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
    <!-- To enable this change clients.config args to be:                -->
    <!--                                                                 -->
    <!--   clientApp3.args=etc/jetty.xml etc/jetty-ssl.xml               -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!-- =========================================================== -->
    <!-- Set up global session ID manager                            -->
    <!-- =========================================================== -->
    <!--
    <Set name="sessionIdManager">
      <New class="org.eclipse.jetty.server.session.HashSessionIdManager">
        <Set name="workerName">node1</Set>
      </New>
    </Set>
    -->

    <!-- =========================================================== -->
    <!-- Set handler Collection Structure                            -->
    <!-- =========================================================== -->
    <Set name="defaultHandler">
      <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
    </Set>
    <Set name="handler">
      <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
    </Set>

    <!-- =============================================================== -->
    <!-- Create the deployment manager                                   -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- The deplyment manager handles the lifecycle of deploying web    -->
    <!-- applications. Apps are provided by instances of the             -->
    <!-- AppProvider interface.  Typically these are provided by         -->
    <!-- one or more of:                                                 -->
    <!--   jetty-webapps.xml       - monitors webapps for wars and dirs  -->
    <!--   jetty-contexts.xml      - monitors contexts for context xml   -->
    <!--   jetty-templates.xml     - monitors contexts and templates     -->
    <!-- =============================================================== -->
    <Call name="addBean">
      <Arg>
        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
          <Set name="contexts">
            <Ref refid="Contexts" />
          </Set>
        </New>
      </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Configure the context deployer                              -->
    <!-- A context deployer will deploy contexts described in        -->
    <!-- configuration files discovered in a directory.              -->
    <!-- The configuration directory can be scanned for hot          -->
    <!-- deployments at the configured scanInterval.                 -->
    <!--                                                             -->
    <!-- This deployer is configured to deploy contexts configured   -->
    <!-- in the $JETTY_HOME/contexts directory                       -->
    <!--                                                             -->
    <!-- =========================================================== -->
    <Ref refid="DeploymentManager">
      <Call name="addAppProvider">
        <Arg>
          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
            <Set name="EnvironmentName">ee8</Set>
            <Set name="parentLoaderPriority">true</Set>
            <Set name="configurationClasses" property="jetty.deploy.configurationClasses" />
            <Set name="monitoredDirName">./eepsite/contexts</Set>
            <Set name="scanInterval">120</Set>
          </New>
        </Arg>
      </Call>
    </Ref>

    <!-- =========================================================== -->
    <!-- Configure the webapp deployer.                              -->
    <!-- A webapp  deployer will deploy standard webapps discovered  -->
    <!-- in a directory at startup, without the need for additional  -->
    <!-- configuration files.    It does not support hot deploy or   -->
    <!-- non standard contexts (see ContextDeployer above).          -->
    <!--                                                             -->
    <!-- This deployer is configured to deploy webapps from the      -->
    <!-- $JETTY_HOME/webapps directory                               -->
    <!--                                                             -->
    <!-- Normally only one type of deployer need be used.            -->
    <!--                                                             -->
    <!-- =========================================================== -->
    <Ref refid="DeploymentManager">
      <Call id="webappprovider" name="addAppProvider">
        <Arg>
          <New id="WebAppProvider" class="org.eclipse.jetty.deploy.providers.ContextProvider">
            <Set name="EnvironmentName">ee8</Set>
            <Set name="parentLoaderPriority">true</Set>
            <Set name="configurationClasses" property="jetty.deploy.configurationClasses" />
            <Set name="monitoredDirName">./eepsite/webapps</Set>
            <!-- this is required because Jetty can't handle jars inside wars,
                 for example in php-java-bridge's JavaBridgeTemplate.war
                 See https://bugs.eclipse.org/bugs/show_bug.cgi?id=433708
                 See our ticket 2477
              -->
            <Set name="extractWars">true</Set>
            <Set name="defaultsDescriptor">./eepsite/etc/webdefault.xml</Set>
          </New>
        </Arg>
      </Call>
    </Ref>

    <!-- Fixup for webapps to work, see our ticket 2477
         Note that for webapps with uncompiled jsps, you will also
         need a java compiler in the classpath;
         The easiest way (Debian/Ubuntu) is to put a symlink in $I2P/lib:
         sudo apt install libecj-java
         cd $I2P/lib
         ln -s /usr/share/java/ecj.jar
         stop and then start i2p (restart alone will not pick up the new jar in the classpath)
      -->
    <Call class="net.i2p.servlet.WebAppProviderConfiguration" name="configure">
      <Arg><Ref refid="WebAppProvider"/></Arg>
    </Call>

    <!-- ===================== -->
    <!-- DefaultHandler config -->
    <!-- http://stackoverflow.com/questions/4202275/how-to-prevent-jetty-from-showing-context-related-information -->
    <!-- ===================== -->
    <Ref refid="DefaultHandler">
      <Set name="showContexts">false</Set>
    </Ref>

    <!-- =========================================================== -->
    <!-- Configure Authentication Realms                             -->
    <!-- Realms may be configured for the entire server here, or     -->
    <!-- they can be configured for a specific web app in a context  -->
    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
    <!-- example).                                                   -->
    <!-- =========================================================== -->
  <!-- UNCOMMENT TO ACTIVATE
    <Set name="UserRealms">
      <Array type="org.eclipse.jetty.security.LoginService">
        <Item>
          <New class="org.eclipse.jetty.security.HashLoginService">
            <Set name="name">Test Realm</Set>
            <Set name="config">./eepsite/etc/realm.properties</Set>
            <Set name="refreshInterval">0</Set>
          </New>
        </Item>
      </Array>
    </Set>
  -->

    <!-- =========================================================== -->
    <!-- Configure Request Log                                       -->
    <!-- Request logs  may be configured for the entire server here, -->
    <!-- or they can be configured for a specific web app in a       -->
    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
    <!-- for an example).                                            -->
    <!-- =========================================================== -->
      <Set name="requestLog">
        <New id="RequestLogImpl" class="net.i2p.jetty.I2PRequestLog">
          <Set name="filename">./eepsite/logs/yyyy_mm_dd.request.log</Set>
          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
          <Set name="retainDays">90</Set>
          <Set name="append">true</Set>
          <Set name="extended">false</Set>
          <Set name="logCookies">false</Set>
          <Set name="LogTimeZone">GMT</Set>
          <!-- False for b32 logging. True for b64 logging. Default false -->
          <Set name="b64">false</Set>
        </New>
      </Set>

    <!-- =========================================================== -->
    <!-- extra options                                               -->
    <!-- =========================================================== -->
    <Set name="stopAtShutdown">true</Set>
    <Set name="stopTimeout">1000</Set>

</Configure>
